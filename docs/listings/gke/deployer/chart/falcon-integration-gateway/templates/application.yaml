apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  name: "{{ .Release.Name }}"
  namespace: "{{ .Release.Namespace }}"
  labels:
    app.kubernetes.io/name: "{{ .Release.Name }}"
    {{- include "falcon-integration-gateway.labels" . | nindent 4 }}
  annotations:
    marketplace.cloud.google.com/deploy-info: '{"partner_id": "partner", "product_id": "falcon-integration-gateway", "partner_name": "CrowdStrike"}'
    kubernetes-engine.cloud.google.com/icon: >-
      data:image/png;base64,{{ .Files.Get "logo.png" | b64enc }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ .Release.Name }}"
  componentKinds:
  - group: apps/v1
    kind: Deployment
  - group: v1
    kind: ConfigMap
  - group: v1
    kind: Secret
  descriptor:
    type: falcon-integration-gateway
    version: '3.3.0'
    description: |-
      Falcon Integration Gateway (FIG) forwards threat detection findings from CrowdStrike Falcon
      platform to the backend of your choice. This instance forwards detection findings to GCP
      Security Command Center.

      Detection findings generated by CrowdStrike Falcon platform inform you about suspicious files
      and behaviors in your environment. You will see detections on a range of activities from
      the presence of a bad file (indicator of compromise (IOC)) to a nuanced collection of suspicious
      behaviors (indicator of attack (IOA)) occurring on one of your hosts or containers. You can
      learn more about the individual detections in Falcon documentation.

      Falcon Integration Gateway (FIG) is an open source project, not CrowdStrike product.
      As such it carries no formal support, expressed or implied.
    links:
    - description: 'User Guide: Deploying Falcon Integration Gateway from GKE Marketplace'
      url: https://github.com/CrowdStrike/falcon-integration-gateway/blob/main/docs/listings/gke/UserGuide.md
    - description: 'Falcon Integration Gateway'
      url: https://github.com/CrowdStrike/falcon-integration-gateway/
    notes: |-
      Detections will be reported in Security Command Center under Finding Source called "CrowdStrike Falcon".

      Sample detections can be created to verify the deployment. To generate a sample detection,
      run the following command inside a Linux virtual machine or container that is protected by
      CrowdStrike Falcon.

          chgrp 0 /etc/ld.so.preload

      The above command will attempt to change the file permissions on the Linux dynamic linker/loader.
      The CrowdStrike Falcon sensor will detect this attempt and generate an event.

  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ .Release.Name }}"
  addOwnerRef: true
  componentKinds:
  - group: ''
    kind: ConfigMap
  - group: ''
    kind: Secret
  - group: apps
    kind: Deployment
